# Notebook 1: Lectura y visualización básica de imágenes con OpenCV
# Importamos las librerías necesarias
import cv2 # Importamos OpenCV para procesamiento de imágenes
import numpy as np # Importamos numpy para manejo de arrays
import matplotlib.pyplot as plt # Importamos matplotlib para visualización
from google.colab.patches import cv2_imshow # Importamos función para mostrar imágenes en Colab
     
# Cargar una imagen desde URL
from urllib.request import urlopen # Para abrir URLs
     
# URL de una imagen de ejemplo
url = 'https://raw.githubusercontent.com/opencv/opencv/master/samples/data/lena.jpg'
# Abrimos la URL y leemos los bytes de la imagen
resp = urlopen(url)
# Convertimos los bytes a un array de numpy
image = np.asarray(bytearray(resp.read()), dtype="uint8")
# Decodificamos el array como una imagen usando OpenCv
image = cv2.imdecode(image, cv2.IMREAD_COLOR)
# OpenCV carga las imágenes en formato BGR, lo convertimos a RGB para visualización correcta
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
     
# Visualización de la imagen original
plt.figure(figsize=(12, 6)) # Creamos una figura con tamaño específico
plt.subplot(1, 2, 1) # Creamos un subplot en la posición 1
plt.title('Imagen Original') # Añadimos un título
plt.imshow(image_rgb) # Mostramos la imagen en formato RGB
plt.axis('off') # Ocultamos los ejes
     
# Convertir a escala de grises
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) # Convertimos la imagen a escala de grises
     
# Visualización de la imagen en escala de grises
plt.subplot(1, 2, 2) # Creamos un subplot en la posición 2
plt.title('Imagen en Escala de Grises') # Añadimos un título
plt.imshow(gray_image, cmap='gray') # Mostramos la iamgen en escala de grises
plt.axis('off') # Ocultamos los ejes
plt.tight_layout() # Ajustamos el layout para que no se superpongan los títulos
plt.show () # Mostramos la figura completa
     

# Información básica de la imagen
print(f"Dimensiones de la imagen original: {image.shape}") # Mostramos las dimensiones (alto, ancho, canales)
print(f"Dimensiones de la imagen en escala de grises: {gray_image.shape}") # Mostramos las dimensiones (alto, ancho)
print(f"Tipo de datos: {image.dtype}") # Mostramos el tipo de datos
print(f"Tamaño en memoria (KB): {image.nbytes / 1024:.2f}") # Mostramos el tamaño en KB
     
Dimensiones de la imagen original: (512, 512, 3)
Dimensiones de la imagen en escala de grises: (512, 512)
Tipo de datos: uint8
Tamaño en memoria (KB): 768.00

# Guardar la imagen procesada
cv2.imwrite('imagen_gris.jpg', gray_image)  # Guardamos la iamgen en escala de grises
print("Imagen guardada correctamente como 'imagen_gris.jpg'")
     
